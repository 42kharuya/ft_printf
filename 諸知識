⚪va_listについて
C言語で可変長引数の関数を作成する際に利用される型
-----------------------------------------------------------------------------------------------
va_start関数:可変引数の処理を開始（初期化作業）
            C言語で可変長引数の関数を作成する際に必ず最初に呼び出すマクロ
型:void va_start(va_list ap, last_arg);
ap:va_list型の変数。引数リストへのアクセスに使用される。
last_arg:可変個引数の直前の固定引数の名前
-----------------------------------------------------------------------------------------------
va_arg関数:可変引数のリストから、次の指定された型の引数を取得するマクロ
            int va_arg(va_list ap, type);
            ap:va_startで初期化されたva_list型の変数
            type:取り出す引数の型。int,double,charなど任意の型を指定できる
-----------------------------------------------------------------------------------------------
va_copy関数:va_list型の変数の内容をコピーするマクロ
void va_copy(va_list dest, va_list src);
dest:コピー先のva_list型の変数
src:コピー元のva_list型の変数
-----------------------------------------------------------------------------------------------
va_end関数:可変引数の処理を終了（メモリ解放）
void va_end(va_list ap);
ap:va_startで初期化されたva_list型の変数
-----------------------------------------------------------------------------------------------
各関数説明
<c>
指定子説明:文字出力

<s>
指定子説明:文字列出力

<p>
指定子説明:引数をvoid *型とみなして、そのポインタを16進数表記で出力する。
・uintptr_tはポインタのアドレスを格納するために用いられる符号なし整数型。
・uintptr_tptr_dataを16で割るのは10進数を16進数表記に変換するため。
・char space[16 + 1]が16+1個分なのは64ビット環境ではuintptr_tは通常64ビット(８バイト)で表現されるため、16進数の場合の最大桁数は16桁になるため。
・return (16 - index - 1)はstart = index + 1 で+1してしまっているため、-1をする。

<d,i>
指定子説明:intを引数として、10進数表記に変換する。

<u>
指定子説明:unsigned intを引数として、符号なしの10進数へ変換する。
itoa関数の引数がunsigned int版を作る。
if (!res)でreturn (0)になるのはmallocの割り当て失敗はNULLを返すから。

<x,X>
指定子説明:unsigned intを引数として、符号なしの16進数へ変換する。xはアルファベット小文字、Xはアルファベット大文字。
下記URLの写真のように基数変換の方法は再帰を使うとやりやすい。
https://cdn.discordapp.com/attachments/875648040134922273/1316001017044930651/IMG_1898.png?ex=675974f4&is=67582374&hm=931037f897c9c03b4436a3c07fa1baf56c2c172af186bba458bb36659e0ec05c&

<%>
指定子説明:％を出力する。

-----------------------------------------------------------------------------------------------
Makefileについて